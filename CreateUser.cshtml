@model Snacks_MVCWithoutEntityFramework.Models.login

@{
    ViewBag.Title = "CreateUser";
}

    <h2 style="color:chocolate">CreateUser</h2>


    @using (Html.BeginForm("CreateUser", "Login", FormMethod.Post, new { enctype = "multipart/form-data"}))
    {



        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="color:darkgreen">Provide User Details to Create</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.uname, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="file" name="UploadImage" class="form-control border border-primary" 
                   accept=".jpeg, .png, .jpg" />

            @Html.ValidationMessageFor(model => model.uname, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.uname, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.uname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.uname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pwd, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pwd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pwd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Login")
    </div>



